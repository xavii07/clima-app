{"version":3,"sources":["components/Clima.js","components/Error.js","components/Formulario.js","components/Header.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Clima","memo","resultado","name","main","sys","weather","kelvin","className","country","parseFloat","temp","toFixed","temp_max","temp_min","humidity","description","Error","mensaje","Formulario","busqueda","setBusqueda","setCargarApi","setIsCargando","useState","error","setError","ciudad","pais","handleChange","e","target","value","onSubmit","preventDefault","trim","type","placeholder","onChange","Header","titulo","Spinner","App","componente","cargarapi","setResultado","iscargando","useEffect","a","url","fetch","peticion","json","respuesta","consultarAPI","cod","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e25be377.chunk.js","sourcesContent":["import React, {memo} from 'react'\r\n\r\nconst Clima = memo(({resultado}) => {\r\n\r\n\r\n    //extraer los datos\r\n    const{name, main, sys, weather} = resultado\r\n\r\n    if(!name) return null\r\n\r\n    //grados kelvin\r\n    const kelvin = 273.15\r\n\r\n    return (\r\n        <div className='text-center'>\r\n            <h5>{name} | {sys.country}</h5>\r\n            <h1 className='text-warning'>{parseFloat(main.temp - kelvin, 10).toFixed(2)} <span>&#x2103;</span></h1>\r\n            <p>Temp. Max: {parseFloat(main.temp_max - kelvin, 10).toFixed(2)} <span>&#x2103;</span></p>\r\n            <p>Temp. Min: {parseFloat(main.temp_min - kelvin, 10).toFixed(2)} <span>&#x2103;</span></p>\r\n            <p>Humidity: {main.humidity} %</p>\r\n            <p>Weather: {weather[0].description}</p>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Clima\r\n","import React from 'react'\r\n\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (\r\n       <p className='alert alert-danger text-center py-2'>{mensaje}</p>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { useState} from 'react'\r\nimport Error from './Error'\r\n\r\nconst Formulario = ({busqueda, setBusqueda, setCargarApi, setIsCargando}) => {\r\n\r\n\r\n    const [error, setError] = useState(false)\r\n\r\n    //extraer los valores de la busqueda\r\n    const {ciudad, pais} = busqueda\r\n\r\n    //Funcion que se ejecuta cunado el usuario escribe en los inputs\r\n    const handleChange = e => {\r\n        setBusqueda({\r\n            ...busqueda,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //cuando el usuario presiona el boton\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        //validar los campos\r\n        if(ciudad.trim() === '' || pais.trim() === '' ) {\r\n            setError(true)\r\n            return\r\n        }\r\n\r\n        //si pasa la validacion\r\n        setError(false)\r\n        setIsCargando(true)\r\n\r\n\r\n        //para que actualize la api\r\n        setCargarApi(true)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <form \r\n            className='form-group'\r\n            onSubmit={handleSubmit}\r\n        >\r\n\r\n            {error && <Error mensaje='Llena todos los campos'/>}\r\n\r\n            <input \r\n                type='text'\r\n                placeholder='Ciudad'\r\n                name='ciudad'\r\n                className='form-control'\r\n                value={ciudad}\r\n                onChange={handleChange}\r\n            /> \r\n\r\n            <select \r\n                name='pais'\r\n                className='form-control mt-3'\r\n                value={pais}\r\n                onChange={handleChange}\r\n            >\r\n              <option value=\"\">-- Seleccione un país --</option>\r\n                <option value=\"EC\">Ecuador</option>\r\n                <option value=\"PE\">Perú</option>\r\n                <option value=\"CO\">Colombia</option>\r\n                <option value=\"AR\">Argentina</option>\r\n                <option value=\"BR\">Brasil</option>\r\n                <option value=\"BO\">Bolivia</option>\r\n                <option value=\"CL\">Chile</option>    \r\n                <option value=\"UY\">Uruguay</option>    \r\n                <option value=\"PY\">Paraguay</option>    \r\n                <option value=\"VE\">Venezuela</option>    \r\n                <option value=\"MX\">México</option>\r\n                <option value=\"ES\">España</option>\r\n                <option value=\"US\">Estados Unidos</option>\r\n            </select>\r\n\r\n            <input \r\n                type='submit'\r\n                className='btn btn-warning form-control mt-4'\r\n                value='Buscar Clima'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Formulario\r\n","import React from 'react'\r\n\r\nconst Header = ({titulo}) => {\r\n    return (\r\n        <header>\r\n            <h1>{titulo}</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './spinner.css'\r\n\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"lds-hourglass\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { Fragment, useEffect, useState } from 'react';\nimport Clima from './components/Clima';\nimport Error from './components/Error';\nimport Formulario from './components/Formulario';\nimport Header from './components/Header';\nimport Spinner from './components/Spinner';\n\n\n\n\n\n\nfunction App() {\n\n\n  const [busqueda, setBusqueda] = useState({\n    ciudad:'',\n    pais:''\n})\nconst {ciudad, pais} = busqueda\n\nconst [cargarapi, setCargarApi] = useState(false)\nconst [resultado, setResultado] = useState({})\nconst [error, setError] = useState(false)\nconst [iscargando, setIsCargando] = useState(false)\n\n\n\n\n\nuseEffect(() => {\n\n  const consultarAPI = async () => {\n\n    if(cargarapi) {\n      \n      \n        const appId = 'd268697fbe2cdc1e96b54b02904c9568'\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`\n        const peticion = await fetch(url)\n        const respuesta = await peticion.json()\n        setResultado(respuesta)\n\n        setCargarApi(false)\n        setIsCargando(false)\n    }\n  }\n  \n    consultarAPI()\n\n},[cargarapi, ciudad, pais])\n\n  useEffect(() => {\n    //detecta si hubo resultados correctos en la consulta\n    if (resultado.cod === '404') {\n      setError(true)\n    } else {\n      setError(false)\n    }\n  },[resultado.cod])\n\n      \n\n\n//carga condicional de componentes\n  let componente\n  if (error) {\n    componente = <Error mensaje='Ciudad no Encontrada'/>\n  } else {\n    componente = <Clima resultado={resultado} />\n  }\n\n\n\n\n\n  return (\n    <Fragment>\n      <Header titulo='Clima App'/>\n\n      <div className='clima'>\n        <div className='clima__formulario'>\n          <Formulario \n            busqueda={busqueda}\n            setBusqueda={setBusqueda}\n            setCargarApi={setCargarApi}\n            setIsCargando={setIsCargando}\n          />\n        </div>\n\n        {iscargando ? <Spinner /> : (\n             <div className='clima__clima'>\n             {componente}\n           </div>\n        )}\n\n       \n      </div>\n\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}